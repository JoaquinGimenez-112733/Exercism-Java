<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="LargestSeriesProductCalculatorTest" tests="14" skipped="0" failures="0" errors="0" timestamp="2024-07-24T05:07:48" hostname="PC-JOAQUIN" time="0.156">
  <properties/>
  <testcase name="testCorrectlyCalculatesLargestProductOfLengthThreeWithNumbersNotInOrder()" classname="LargestSeriesProductCalculatorTest" time="0.103"/>
  <testcase name="testForIntegerOverflow()" classname="LargestSeriesProductCalculatorTest" time="0.004"/>
  <testcase name="testCorrectlyCalculatesLargestProductOfZeroIfAllDigitsAreZeroes()" classname="LargestSeriesProductCalculatorTest" time="0.002"/>
  <testcase name="testCorrectlyCalculatesLargestProductInLongStringToSearchV1()" classname="LargestSeriesProductCalculatorTest" time="0.006"/>
  <testcase name="testSeriesLengthLongerThanLengthOfStringToTestIsRejected()" classname="LargestSeriesProductCalculatorTest" time="0.006"/>
  <testcase name="testCorrectlyCalculatesLargestProductOfLengthThreeWithNumbersInOrder()" classname="LargestSeriesProductCalculatorTest" time="0.002"/>
  <testcase name="testCorrectlyCalculatesLargestProductOfZeroIfAllSeriesOfGivenLengthContainZero()" classname="LargestSeriesProductCalculatorTest" time="0.002"/>
  <testcase name="testNegativeSeriesLengthIsRejected()" classname="LargestSeriesProductCalculatorTest" time="0.001"/>
  <testcase name="testCorrectlyCalculatesLargestProductWhenSeriesLengthEqualsStringToSearchLength()" classname="LargestSeriesProductCalculatorTest" time="0.001"/>
  <testcase name="testCorrectlyCalculatesLargestProductOfLengthTwoWithNumbersInOrder()" classname="LargestSeriesProductCalculatorTest" time="0.003"/>
  <testcase name="testEmptyStringToSearchAndSeriesOfNonZeroLengthIsRejected()" classname="LargestSeriesProductCalculatorTest" time="0.001"/>
  <testcase name="testStringToSearchContainingNonDigitCharacterIsRejected()" classname="LargestSeriesProductCalculatorTest" time="0.002"/>
  <testcase name="testCorrectlyCalculatesLargestProductOfLengthFiveWithNumbersInOrder()" classname="LargestSeriesProductCalculatorTest" time="0.002"/>
  <testcase name="testCorrectlyCalculatesLargestProductOfLengthTwoWithNumbersNotInOrder()" classname="LargestSeriesProductCalculatorTest" time="0.002"/>
  <system-out><![CDATA[1027839564
1
0
2
7
8
3
9
5
6
4
1027839564
102
783
956
027839564
027
839
564
9999999999
9
9
9
9
9
9
9
9
9
9
9999999999
9999999999
999999999
99999999
9999999
999999
99999
9999
999
99
9

0000
0
0
0
0
0000
00
00
000
00
73167176531330624919225119674426574742355349194934
7
3
1
6
7
1
7
6
5
3
1
3
3
0
6
2
4
9
1
9
2
2
5
1
1
9
6
7
4
4
2
6
5
7
4
7
4
2
3
5
5
3
4
9
1
9
4
9
3
4
73167176531330624919225119674426574742355349194934
731671
765313
306249
192251
196744
265747
423553
491949
3167176531330624919225119674426574742355349194934
316717
653133
062491
922511
967442
657474
235534
919493
167176531330624919225119674426574742355349194934
167176
531330
624919
225119
674426
574742
355349
194934
67176531330624919225119674426574742355349194934
671765
313306
249192
251196
744265
747423
553491
123
1
2
3
0123456789
0
1
2
3
4
5
6
7
8
9
0123456789
012
345
678
123456789
123
456
789
99099
9
9
0
9
9
99099
990
9099
909
12345
1
2
3
4
5
29
2
9
29
29
9

0123456789
0
1
2
3
4
5
6
7
8
9
0123456789
01
23
45
67
89
123456789
12
34
56
78
23456789
23
45
67
89

1234a5
1
2
3
4
a
0123456789
0
1
2
3
4
5
6
7
8
9
0123456789
01234
56789
123456789
12345
23456789
23456
3456789
34567
456789
45678
56789
56789
576802143
5
7
6
8
0
2
1
4
3
576802143
57
68
02
14
76802143
76
80
21
43
6802143
68
02
14
]]></system-out>
  <system-err><![CDATA[]]></system-err>
</testsuite>
